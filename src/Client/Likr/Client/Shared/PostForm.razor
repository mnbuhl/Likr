<div class="mb-4">
    <h3 class="font-semibold text-xl mb-4">Create a post</h3>
    <EditForm Model="@_post" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>
        <InputTextArea class="form-textarea w-5/6 bg-gray-900 mr-5 rounded-xl" placeholder="What is on your mind?" rows="@_rows"
                       @bind-Value="@_post.Body"
                       @onclick="@(() => _rows = "4")" @onfocusout="@(() => _rows = "2")">
        </InputTextArea>
        <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full align-top mt-4"
                type="submit">
            Post
        </button>
        <ValidationSummary/>
    </EditForm>
</div>

@code {

    [Inject]
    public IPostService? PostService { get; set; }

    [CascadingParameter(Name = "UserId")]
    public string? UserId { get; set; }

    [Parameter]
    public EventCallback<PostDto> OnPostCreated { get; set; }

    private CreatePostDto _post = new CreatePostDto();
    private string _rows = "2";


    private async Task HandleValidSubmit()
    {
        if (UserId == null || PostService == null)
            return;

        _post.UserId = Guid.Parse(UserId);
        var post = await PostService.CreatePost(_post);

        await OnPostCreated.InvokeAsync(post);

        _post = new CreatePostDto();
    }

}