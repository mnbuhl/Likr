@if (CommentDto != null)
{
    <div class="comment-container border border-opacity-25 rounded-md mb-4 relative">
        @if (UserId != null && string.Equals(UserId, CommentDto.UserId))
                {
                    <button @onclick="@(async () => await OnDelete.InvokeAsync(CommentDto))" 
                            class="w-5 absolute right-0 mt-4 mr-4 opacity-75">
                        <img src="images/delete.svg" />
                    </button>
                }
        <div class="p-5">
            <a href="" class="space-x-1 mb-0">
                <p class="inline-block hover:underline mb-5 font-semibold">@CommentDto?.User?.DisplayName</p>
                <p class="inline-block text-gray-500 text-sm hover:underline">@@@CommentDto?.User?.Username</p>
            </a>
            <p class="text-sm text-gray-500 -mt-3">
                Replying to
                <span class="text-blue-400 hover:underline cursor-pointer">
                    @@@InReplyTo
                </span>
            </p>
            <p class="mb-5">@CommentDto?.Body</p>
            <div class="space-x-10">
                <button>
                    <img class="w-5 inline-block" src="images/comment.svg" alt="comment"/>
                    <span class="inline-block">@CommentDto?.CommentsCount</span>
                </button>

                <button>
                    <img class="w-5 inline-block" src="images/star.svg" alt="comment"/>
                    <span class="inline-block">@CommentDto?.LikesCount</span>
                </button>

                <button>
                    <img class="w-5 inline-block" src="images/share.svg" alt="share"/>
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Inject]
    public AuthService? AuthService { get; set; }
    
    [Parameter]
    public CommentDto? CommentDto { get; set; }

    [Parameter]
    public string? InReplyTo { get; set; } = "Default User";
    
    [Parameter]
    public EventCallback<CommentDto> OnDelete { get; set; }

    [Parameter]
    public string? UserId { get; set; }
}